//================================//
// there is some codes includes half 
//adder and full adder and 4-4bits adding-subtracting 
//=================================//
module half_adder( input a,b, output sum, carry);

	xor(sum, a,b);
	and(carry, a,b);
	
endmodule

module full_adder( input a,b,cin, output carry, sum);

	wire w1,w2,w3;
	
	half_adder m1(.a(a), .b(b), .sum(w1), .carry(w2) );
	half_adder m2(.a(w1), .b(cin), .sum(sum), .carry(w3) );
	
	or m3(carry, w2,w3);
	
endmodule

module full_adder_4_bits( input [3:0] a,b, input cin, output [3:0] sum, output carry );

	wire w1,w2,w3;
	
	full_adder m1(.a(a[0]), .b(b[0]), .cin(cin), .sum(sum[0]),	.carry(w1)	  );
	full_adder m2(.a(a[1]), .b(b[1]), .cin(w1), 	.sum(sum[1]),	.carry(w2) 	  );
	full_adder m3(.a(a[2]), .b(b[2]), .cin(w2), 	.sum(sum[2]),	.carry(w3) 	  );
	full_adder m4(.a(a[3]), .b(b[3]), .cin(w3),	.sum(sum[3]),	.carry(carry) );

endmodule

module full_add_sub_4_bits(input [3:0] a,b, input cin, output [3:0] out, output carry );
	wire [3:0] wxor, wcarry;
	
	xor gate1(wxor[0], cin, b[0] );
	xor gate2(wxor[1], cin, b[1] );
	xor gate3(wxor[2], cin, b[2] );
	xor gate4(wxor[3], cin, b[3] );
	
	full_adder_4_bits m1(.a(a), .b(wxor), .cin(cin), .sum(out), .carry(carry) );
	
endmodule
	









//==============================//
//    test beach on modelsim // 
//=============================//
//  module full_add_sub_4_bits(input [3:0] a,b, input cin, output [3:0] out, output carry );
module add_sub_tb();


	reg [3:0] a,b;
	reg cin;
	wire [3:0] sum;
	wire carry;
	
	full_add_sub_4_bits   inst1( .a(a), .b(b), .cin(cin), .out(sum), .carry(carry) );
	
initial 
begin
	cin = 1'b0;
	#5;
	a = 4'b0011; b = 4'b1100;
	#10;
	a = 4'b1001; b = 4'b0001;
	#10;
	a = 4'b1000; b = 4'b1001;

end

//$monitor("time =%2d, a=4
endmodule


	
