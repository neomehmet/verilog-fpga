
//=============================//
// mux design implemantation
//lsb and msb are inputs
// sel is select bit
//=============================//

module mux2x1( input [3:0]a1,a0, input sel, output[3:0] y);
	wire [3:0] w1,w2,w3, w_sel;
	
	not (w1[0], sel);
	not (w1[1], sel);
	not (w1[2], sel);
	not (w1[3], sel);
	
	and (w2[0],	a0[0], w1[0]);
	and (w2[1],	a0[1], w1[1]);
	and (w2[2],	a0[2], w1[2]);
	and (w2[3],	a0[3], w1[3]);
	
	and (w3[0],	a1[0], sel);
	and (w3[1],	a1[1], sel);
	and (w3[2],	a1[2], sel);
	and (w3[3],	a1[3], sel);
	
	or (y[0],	w2[0], w3[0]);
	or (y[1],	w2[1], w3[1]);
	or (y[2],	w2[2], w3[2]);
	or (y[3],	w2[3], w3[3]);

endmodule

module mux4x2(input[3:0] a3,a2,a1,a0, input sel0, sel1, output[3:0] y);

	wire [3:0] w1,w2;
	
//module mux2x1( input [3:0]a1,a0, input sel, output[3:0] y);	

	mux2x1 m1(.y(w1), .a1(a1), .a0(a0), .sel(sel0) );
	mux2x1 m2(.y(w2), .a1(a3), .a0(a2), .sel(sel0) );
	
	mux2x1 m3(.y(y), .a1(w2), .a0(w1), .sel(sel1) );
	
endmodule
