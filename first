
module example_top(input [9:0] SW, output [9:0] LED);

sub_module(.a_in(SW), .a_out(LED) );

endmodule

module sub_module( input [9:0] a_in, output [9:0] a_out);

assign a_out[9:5] = {5{a_in[9]}}; // buton 9 controls led 5,6,7,8,9
assign a_out[4:0] = {3'b000,2'd3};

endmodule

/*
module example_top(input [9:0] SW, output [9:0] LED);
assign LED[9:5] = {5{1'b1}}; // multiply bits = 1_1111
assign LED[4:0] = {3'b000,2'b01}; // merge and 5 bits = 0_0001 ;
endmodule

*/


/*
module example_top(input [2:0] SW, output [2:0] LED );
// testify on terasic 5ceba4fc27
	and g1(LED[0], SW[0], SW[1]);
	xor g2(LED[1], SW[0], SW[1], SW[2]);
	not g3(LED[2], SW[2]);
	
endmodule
*/

/*
//=============================================//
// module definition // module is like as a C function
// module and file name must be same
//=============================================//
module example_top(A,B,C,Z);
	input A,B,C;
	output Z;
	wire W1;
	
	myXOR x1(A,B,W1);
	myXOR x2(W1,C,Z);
endmodule 


module myXOR(input x,y, output z);
	xor x1(z,x,y);
endmodule
*/
